

Easy
````

dnarest_on
~~~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Restrain the DNA conformation
| *short description*: Automatically creates restraints to maintain the conformation of DNA/RNA
| *long description*: This option allows to restraint the conformation of nucleic acids based on the values from the input structures. The following restraints will be automatically defined: - single base planarity - sugar pucker - phosphate backbone diherdral angle restraints - Watson-Crick base pairing
| *group*: other restraints
| *explevel*: easy

elecflag
~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Include electrostatics energy
| *short description*: Include electrostatics energy during the calculations.
| *long description*: Include electrostatics energy during the calculations. If set to false electrostatics will not be considered.
| *group*: force field
| *explevel*: easy

error_dih
~~~~~~~~~

| *default*: 10
| *type*: integer
| *title*: Force constant for backbone dihedral angle restraints
| *min*: 0
| *max*: 1000
| *short description*: Force constant for backbone dihedral angle restraints (ssdihed option)
| *long description*: Force constant for backbone dihedral angle restraints (ssdihed option)
| *group*: dihedral restraints
| *explevel*: easy

ligand_param_fname
~~~~~~~~~~~~~~~~~~

| *default*: ''
| *type*: file
| *title*: Custom ligand parameter file
| *short description*: Ligand parameter file in CNS format
| *long description*: Ligand parameter file in CNS format containing all force field parameters (bond, angles, dihedrals, impropers, van der waals) for any ligand not supported by default by HADDOCK
| *group*: force field
| *explevel*: easy

ligand_top_fname
~~~~~~~~~~~~~~~~

| *default*: ''
| *type*: file
| *title*: Custom ligand topology file
| *short description*: Ligand topology file in CNS format
| *long description*: Ligand topology file in CNS format containing the ligand topologies (atoms, masses, charges, bond definitions...) for any ligand not supported by default by HADDOCK
| *group*: force field
| *explevel*: easy

solvent
~~~~~~~

| *default*: 'water'
| *type*: string
| *title*: Solvent
| *choices*: ['water', 'dmso']
| *short description*: Solvent to use during the short MD refinement
| *long description*: Solvent to use during the short MD refinement. Water and DMSO are supported. A solvent shelll is generated by shifting pre-equilibrated boxes around the complex. For water an 8A water shell is generated and for DMSO a 12.5A shell. For DMSO,
| *group*: 
| *explevel*: easy

ssdihed
~~~~~~~

| *default*: 'none'
| *type*: string
| *title*: Define automatically backbone dihedral angle restraints
| *choices*: ['none', 'all', 'alpha', 'alphabeta']
| *short description*: If turned on, this option will automatically defined backbone dihedral angle restraints for the selected regions.
| *long description*: This option allows to utomatically defined backbone dihedral angle restraints for the selected regions. The restraints will be defined for the phi and psi backbone dihedral angles of amino acids, with the target value taken from the measured angle in the input structure, and the error bound defined by the error_dih parameter. Those restraints can be applied to the entire structure (all), the alpha/beta secondary structure elements (alphabeta) or only to the alpha helical regions (alpha). Those are automatically detected based on the measured dihedral angle combinations.
| *group*: dihedral restraints
| *explevel*: easy


Expert
``````

contactairs
~~~~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Contact restraints
| *short description*: Contact restraints between molecules
| *long description*: Contact restraints between molecules. These are defined as ambiguous distance restraint between each residue of a molecule and all residues of the other molecules with 5A from that residue. This can be used to restraint the contacts between the interfaces. Note that this can generate a large number of ambiguous restraints and slow down the computations
| *group*: distance restraints
| *explevel*: expert

dielec
~~~~~~

| *default*: 'cdie'
| *type*: string
| *title*: Constant (cdie) or distance-dependent dielectric (rdie) constant.
| *choices*: ['cdie', 'rdie']
| *short description*: Use a constant (cdie option) or a distance-dependent dielectric (rdie) constant in the Coulomb potential.
| *long description*: Use a constant (cdie option) or a distance-dependent dielectric (rdie) constant in the Coulomb potential. A distance dependent dielectric constant will effectively scale down the electrostatic energy by having a 1/r**2 dependency instead of 1/r
| *group*: force field
| *explevel*: expert

dihedflag
~~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Use torsion angle dihedral energy term
| *short description*: Turns on the torsion angle dihedral energy terms of the force field.
| *long description*: Turns on the torsion angle dihedral energy terms of the force field.
| *group*: force field
| *explevel*: expert

epsilon
~~~~~~~

| *default*: 1.0
| *type*: float
| *title*: Dielectric constant
| *min*: 1
| *max*: 78
| *short description*: Dielectric constant for the electrostatic Coulomb energy term.
| *long description*: Dielectric constant for the electrostatic Coulomb energy term.
| *group*: force field
| *explevel*: expert

individualize
~~~~~~~~~~~~~

| *default*: True
| *type*: boolean
| *title*: Individualise models
| *short description*: Treat each model in the PDB ensemble as a separate entity.
| *long description*: Treat each model in the PDB ensemble as a separate entity. This means that for each a separate topology file will be generated. The models in the ensemble can thus correspond to different molecules.
| *group*: sampling
| *explevel*: expert

interface_combinations
~~~~~~~~~~~~~~~~~~~~~~

| *default*: []
| *type*: list
| *title*: Chains to be scored.
| *short description*: List of chains to be scored. Use this parameter to provide a list of chain pairs (coma separated) that should be considered for the calculation. If empty/unspecified, all inter-chains contacts will be considered for the final prediction.
| *long description*: List of chains to be scored. If empty/unspecified, all inter-chains contacts will be considered for the final prediction. In specific cases, for example antibody-antigen complexes, some chains should be considered as a single molecule. Use this parameter to provide a list of chain pairs (separated by coma) that should be considered for the calculation. []             => Compute all interface scores ["A,H", "A,L"] => Compute sum of per-interface scores between chains A and H; A and L
| *group*: scoring
| *explevel*: expert

kcont
~~~~~

| *default*: 1.0
| *type*: float
| *title*: Contact restraints force constant
| *min*: 0
| *max*: 1000
| *short description*: Force constant applied to the contact restraints.
| *long description*: Force constant applied to the contact restraints.
| *group*: distance restraints
| *explevel*: expert

nemsteps
~~~~~~~~

| *default*: 200
| *type*: integer
| *title*: Number of EM steps
| *min*: 0
| *max*: 10000
| *short description*: Number of energy minimisation steps to perform.
| *long description*: Number of energy minimisation steps to perform in the various EM stages of this refinement protocol. Note that the effective number might be smaller if the minimisation converges earlier.
| *group*: sampling
| *explevel*: expert

per_interface_scoring
~~~~~~~~~~~~~~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Interchain scoring
| *short description*: Output scores per interface in the PDB header.
| *long description*: With this option true, the interface of all combinations of chains will be analysed and the corresponding HADDOCK scores (without restraints terms) and their components (Eelec, Evdw, Edesol, BSA) will be written to the header of each PDB file.
| *group*: scoring
| *explevel*: expert

tolerance
~~~~~~~~~

| *default*: 5
| *type*: integer
| *title*: Failure tolerance percentage
| *min*: 0
| *max*: 99
| *short description*: Percentage of allowed failures for a module to successfully complete
| *long description*: Percentage of allowed failures for a module to successfully complete
| *group*: module
| *explevel*: expert

w_bsa
~~~~~

| *default*: 0.0
| *type*: float
| *title*: Weight of the buried surface area term
| *min*: -9999
| *max*: 9999
| *short description*: Weight of the buried surface area term in the scoring function
| *long description*: Weight of the buried surface area (BSA) term in the scoring function. Note that the BSA is only used for scoring.
| *group*: scoring
| *explevel*: expert

w_cdih
~~~~~~

| *default*: 0.0
| *type*: float
| *title*: Weight of the dihedral angle restraint energy
| *min*: 0
| *max*: 9999
| *short description*: Weight of the dihedral angle restraints energy in the scoring function
| *long description*: Weight of the dihedral angle restraints energy in the scoring function. Note that this is different from the force constant used during the calculations.
| *group*: scoring
| *explevel*: expert

w_desolv
~~~~~~~~

| *default*: 1.0
| *type*: float
| *title*: Weight of the desolvation energy term
| *min*: -9999
| *max*: 9999
| *short description*: Weight of the desolvation energy term in the scoring function
| *long description*: Weight of the desolvation energy term in the scoring function. Note that the desolvation energy is only used for scoring.
| *group*: scoring
| *explevel*: expert

w_elec
~~~~~~

| *default*: 0.2
| *type*: float
| *title*: Weight of the intermolecular electrostatic energy
| *min*: -9999
| *max*: 9999
| *short description*: Weight of the intermolecular electrostatic energy in the scoring function
| *long description*: Weight of the intermolecular electrostatic energy in the scoring function. Note that this does not affect the electostatic energy during the MD refinement.
| *group*: scoring
| *explevel*: expert

w_vdw
~~~~~

| *default*: 1.0
| *type*: float
| *title*: Weight of the intermolecular van der Waals energy
| *min*: -9999
| *max*: 9999
| *short description*: Weight of the intermolecular van der Waals energy in the scoring function
| *long description*: Weight of the intermolecular van der Waals energy in the scoring function. Note that this does not affect the van der Waals energy during the EM minimization.
| *group*: scoring
| *explevel*: expert

watercoolsteps
~~~~~~~~~~~~~~

| *default*: 500
| *type*: integer
| *title*: Number of MD steps for the cooling
| *min*: 0
| *max*: 10000
| *short description*: Number of MD steps for the cooling phase.
| *long description*: Number of MD steps for the cooling phase. The cooling consists of three successive short molecular dynamics simluations at 300, 200 and 100 Kelvin.
| *group*: sampling
| *explevel*: expert

waterheatsteps
~~~~~~~~~~~~~~

| *default*: 100
| *type*: integer
| *title*: Number of MD steps for the heating
| *min*: 0
| *max*: 10000
| *short description*: Number of MD steps for the heating phase.
| *long description*: Number of MD steps for the heating phase. The heating consists of three successive short molecular dynamics simluations at 100, 200 and 300 Kelvin.
| *group*: sampling
| *explevel*: expert

watersteps
~~~~~~~~~~

| *default*: 1250
| *type*: integer
| *title*: Number of MD steps at 300K.
| *min*: 0
| *max*: 100000
| *short description*: Number of MD steps for 300K simulation.
| *long description*: Number of MD steps for 300K simulation. This is the sampling state of the refinement.
| *group*: sampling
| *explevel*: expert


Guru
````

iniseed
~~~~~~~

| *default*: 917
| *type*: integer
| *title*: Random seed
| *min*: 0
| *max*: 9999999999999999
| *short description*: Random seed used in CNS to initialize the random seed function
| *long description*: Random seed used in CNS to initialize the random seed function
| *group*: sampling
| *explevel*: guru

keepwater
~~~~~~~~~

| *default*: False
| *type*: boolean
| *title*: Write water molecules to output file
| *short description*: Write water molecules if present to the output file.
| *long description*: Write water molecules if present to the output file.
| *group*: sampling
| *explevel*: guru

log_level
~~~~~~~~~

| *default*: 'quiet'
| *type*: string
| *title*: Log level verbosity for CNS
| *choices*: ['verbose', 'normal', 'quiet']
| *short description*: Set the log level verbosity for CNS
| *long description*: CNS, the computational engine used by HADDOCK can generate a lot of output messages. This parameter controls the verbosity of CNS (verbose, normal or quiet).
| *group*: module
| *explevel*: guru

timestep
~~~~~~~~

| *default*: 0.002
| *type*: float
| *title*: MD integrating time step
| *min*: 0.0005
| *max*: 0.004
| *short description*: Integration time step for the molecular dynamics.
| *long description*: Integration time step for the molecular dynamics.
| *group*: sampling
| *explevel*: guru

