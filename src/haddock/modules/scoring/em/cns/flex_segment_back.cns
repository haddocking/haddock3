! flex_segment_back.cns
!    Define the semi-flexible segments (both side-chains and backbone)
!
! ***********************************************************************
! * Copyright 2003-2020 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!

do (store5 = 0) (all)
do (store6 = 0) (all)
do (store7 = 0) (all)

!first flexible segments for docking
evaluate($nchain1 = 0)
while ($nchain1 < $ncomponents) loop nloop1
  evaluate($nchain1 = $nchain1 + 1)
  evaluate($nf=0)
  display AUTOMATIC DEFINITION OF FLEXIBLE SEGMENTS BASED ON INTERMOLECULAR PROXIMITY FOR MOLECULE $nchain1
  inline @RUN:flexauto-neighbors.cns
end loop nloop1

do (store5 = 21) (resn WAT or resn HOH or resn TIP*)
evaluate ($nfletot = 0)

! check number of flexible residues per molecule
evaluate($nchain1 = 0)
while ($nchain1 < $ncomponents) loop nloop3
  evaluate($nchain1 = $nchain1 + 1)
  do (store6 = 0) (all)
  do (store6 = 1) (tag and (attr store5 = $nchain1))
  show sum (store6) (all)
  evaluate ($numfle=$result)
  do (store6 = 0) (all)
  do (store6 = 1) (tag and segid $nchain1 and not (attr store5 = $nchain1))
  show sum (store6) (all)
  evaluate ($numrig=$result)
  do (store6 = 0) (all)
  do (store6 = 1) (tag and segid $nchain1)
  show sum (store6) (all)
  evaluate ($numres=$result)
  display FLEXIBILITY STATISTIC FOR MOLECULE $nchain1 : Nres=$numres Nrigid=$numrig Nflex=$numfle
  evaluate ($nfletot = $nfletot + $numfle)
end loop nloop3

do (store1 = 0) (all)
do (store1 = 1) ((resn WAT or resn HOH or resn TIP*) and name OH2)
show sum (store1) ((resn WAT or resn HOH or resn TIP*))
evaluate ($nfletot = $nfletot + $result)

evaluate ($nfletot = $nfletot + 10)
