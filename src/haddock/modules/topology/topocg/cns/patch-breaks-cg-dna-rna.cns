! dna-cg-break.cns
!    Detect protein chain breaks
!
! ***********************************************************************
! * Copyright 2003-2024 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!
evaluate ($pbreak=0)

for $id1 in id ( name BB3 ) loop cgdnabreak

    show (segid) (id $id1)
    evaluate ($segid1=$result)
    show (resid) (id $id1)
    evaluate ($resid1=$result)
    show (resn) (id $id1)
    evaluate ($resn1=$result)

    show sum(1) (id $id1)
    if ( $result = 0 ) then
        display unknown coordinates for segid $segid1 resn $resn1 resid $resid1 name BB
        display this coordinate must be known for automatic cg dna chain break detection
        abort
    end if

    for $id2 in id ( name BB1 and bondedto( segid $segid1 and resid $resid1 and name BB3 ) ) loop cg2dnabreak

       show (segid) (id $id2)
       evaluate ($segid2=$result)

       show (resid) (id $id2)
       evaluate ($resid2=$result)

       show (resn) (id $id2)
       evaluate ($resn2=$result)
  
       show sum(1) (id $id2)
       if ( $result = 0 ) then
          display unknown coordinates for segid $segid2 resn $resn2 resid $resid2 name BB
          display this coordinate must be known for automatic cg dna chain break detection
          abort
       end if

       ! calculate distance
       pick bond
          (name BB3 and segid $segid1 and resid $resid1)
          (name BB1 and segid $segid2 and resid $resid2)
          geometry

       if ( $result > &dnacgbreak_cutoff ) then
          evaluate ($pbreak=$pbreak+1)
          evaluate ($seg1.$pbreak=$segid1)
          evaluate ($res1.$pbreak=$resid1)
          evaluate ($seg2.$pbreak=$segid2)
          evaluate ($res2.$pbreak=$resid2)
          evaluate ($patch.$pbreak=DNCG)
       end if

   end loop cg2dnabreak

end loop cgdnabreak

evaluate ($counter=1)

    while ($counter <= $pbreak) loop delete
       patch $patch.$counter
          reference=-=(segid $seg1.$counter and resid $res1.$counter)
          reference=+=(segid $seg2.$counter and resid $res2.$counter)
       end
       buffer message
           display dna cg bond removed (applied $patch.$counter): from \
$seg1.$counter[a4] $res1.$counter[a4] to $seg2.$counter[a4] $res2.$counter[a4]
       end
       evaluate ($counter=$counter+1)
end loop delete

