[tox]
minversion = 3.14.0
ignore_basepython_conflict = true
# these are the environments that will run when you
# execute `tox` in the command-line
# bellow you will find explanations for all environments
envlist =
    py39
    build
    lint

# configures which environments run with each python version
[testenv]
basepython =
    {py39}: {env:TOXPYTHON:python3.9}
    {build,lint,radon,safety}: {env:TOXPYTHON:python3}
passenv = *

[testenv:py39]
setenv = {[testenv:py39]setenv}
usedevelop = {[testenv:py39]usedevelop}
deps = {[testenv:py39]deps}
commands_pre = {[testenv:py39]commands_pre}
commands = {[testenv:py39]commands}
commands_post = {[testenv:py39]commands_post}

[testenv:lint]
skip_install = true
deps =
    flake8>=4
    flake8-docstrings
    flake8-bugbear
    pygments
    isort
commands =
    #flake8 {posargs:src/haddock tests setup.py docs}
    flake8 {posargs:src/haddock tests setup.py}
    isort --verbose --check-only --diff src/haddock tests setup.py

# asserts package build integrity
[testenv:build]
skip_install = true
# setenv here integrates with commit message in .bumpversion.cfg
# we can tests bump2version with an actual commit
setenv =
    COMMIT_MSG = Test commit message
# dependencies needed for code quality checks
# you need to add here any additional dependencies you might need
deps =
    setuptools
    wheel
    twine
    docutils
    check-manifest
    readme-renderer
    bump2version
commands_pre = python {toxinidir}/devtools/clean_dist_check.py
commands =
    python --version
    python setup.py sdist bdist_wheel
    twine check dist/*.whl
    twine check dist/*.tar.gz
    check-manifest {toxinidir}
    bump2version --dry-run --verbose --allow-dirty patch
    bump2version --dry-run --verbose --allow-dirty minor
    bump2version --dry-run --verbose --allow-dirty major
commands_post = python {toxinidir}/devtools/clean_dist_check.py

# code quality assessment. This is not a check in the CI, serves just
# as info for the developer
[testenv:radon]
skip_install = true
deps = radon
commands =
    radon cc -s --total-average --no-assert {posargs:src/haddock}
    radon mi -m -s {posargs:src/haddock}

# safety checks
[testenv:safety]
skip_install = true
deps = safety
commands = safety check


# CONFIGURATIONS

# favourite configuration for flake8 styling
# https://flake8.pycqa.org/en/latest/#
[flake8]
max_line_length = 80
hang-closing = true
ignore =
    W293
    W503
    D412
    D105
per-file-ignores = setup.py:E501
docstring-convention = numpy


[isort]
line_length = 80
indent = 4
multi_line_output = 8
include_trailing_comma = true
lines_after_imports = 2
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_first_party = haddock
known_third_party =
    gdock
    lightdock
    fcc
    jsonpickle
    numpy
    hypothesis
    pytest
